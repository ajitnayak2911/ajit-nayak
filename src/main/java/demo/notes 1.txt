import asyncio
import os
import ssl
import urllib.request
ssl._create_default_https_context = ssl._create_unverified_context
from browser_use.agent.service import Agent
from langchain_google_genai import ChatGoogleGenerativeAI
from openai import api_key
from pydantic import SecretStr


async def SiteValidation():
    os.environ["GEMINI_API_KEY"] = "AIzaSyDqCBmwdVuXMaRelXRpLxSN0tmXFi3j8BI"
    task = (
        'Important: I am a UI Automation tester validating the tasks'
        'Open website https://www.broadridge.com/'
        'After the page opens click on Talk to us'
        'Then the form modal opens up and then fill the form by entering all the mandatory details and click on the button Contact Sales'
        'Verify the Thank you message is displayed'
    )
    api_key = os.environ["GEMINI_API_KEY"]
    llm = ChatGoogleGenerativeAI(model='gemini-2.0-flash-exp', api_key=SecretStr(api_key))
    agent = Agent(task, llm, use_vision=True)
    history = await agent.run()
    test_result = history.final_result()
    print(test_result)


if __name__ == "__main__":
    try:
        asyncio.run(SiteValidation())
    except Exception as e:
        print(f"An error occurred: {e}")